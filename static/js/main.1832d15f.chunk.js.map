{"version":3,"sources":["logo.png","actions/index.js","services/serviceAPI.js","pages/PaginaInicial.jsx","components/Header.jsx","components/Answers.jsx","pages/TelaJogo.jsx","pages/Configuracoes.jsx","pages/Feedback.jsx","pages/Ranking.js","serviceWorker.js","reducers/index.js","store/index.js","index.js","App.js"],"names":["module","exports","fetchToken","dispatch","type","fetch","then","response","json","ok","Promise","resolve","reject","data","token","receiveAPIdataSuccess","error","receiveAPIdataFailure","fetchQuestions","qresponse","questions","results","receiveQuestionsFromAPI","CryptoJS","require","PaginaInicial","props","state","nome","email","hash","clicked","nomeChange","bind","emailChange","cR","clickAPI","localStorage","setItem","JSON","stringify","player","name","assertions","score","gravatarEmail","event","this","setState","target","value","cryptoMail","MD5","toString","hC","chave","e","to","className","src","logo","alt","data-testid","style","color","htmlFor","onChange","disabled","onClick","Component","connect","login","handleSubmit","Header","placar","loginReducer","placarReducer","scoreR","Answers","isClicked","isAssertion","timer","nQ","clickC","clickI","intervalChange","setLocalstorage","myInterval","setInterval","clearInterval","previousState","timeOut","counterF","playerR","points","info","dif","perguntas","count","difficulty","correct_answer","incorrect_answers","map","respostaI","i","tokenReducer","counterReducer","dados","TelaJogo","category","question","Configuracoes","Feedback","message","text","oldRanking","parse","getItem","newRanking","picture","acertos","zeroCount","clearLogin","clearPlacar","clearStore","assertionsR","Ranking","Mapa","sort","a","b","jogador","index","key","Boolean","window","location","hostname","match","INITIAL_STATE_LOGIN","INITIAL_STATE_PLACAR","INITIAL_STATE_TOKEN","isFetching","INITIAL_STATE_COUNTER","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1832d15f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c35c92ee.png\";","import { tokenAPI, questionsAPI } from '../services/serviceAPI';\n\nexport const LOGIN = 'LOGIN';\nexport const REQUEST_API_DATA = 'REQUEST_API_DATA';\nexport const RECEIVE_API_DATA_SUCCESS = 'RECEIVE_API_DATA_SUCCESS';\nexport const RECEIVE_API_DATA_FAILURE = 'RECEIVE_API_DATA_FAILURE';\nexport const REQUEST_QUESTIONS = 'REQUEST_QUESTIONS';\nexport const RECEIVE_QUESTIONS_FROM_API = 'RECEIVE_QUESTIONS_FROM_API';\nexport const COUNTER = 'COUNTER';\nexport const DADOS = 'DADOS';\nexport const ZEROU = 'ZEROU';\nexport const CLEARLOG = 'CLEARLOG';\nexport const ZERODADOS = 'ZERODADOS';\n\nexport const dados = (player) => ({\n  type: DADOS,\n  player,\n});\n\nexport const zeroDados = () => ({\n  type: ZERODADOS,\n});\n\nexport const handleSubmit = (login) => ({\n  type: LOGIN,\n  login,\n});\n\nexport const clearLog = () => ({\n  type: CLEARLOG,\n});\n\nconst requestAPIdata = () => ({\n  type: REQUEST_API_DATA,\n});\n\nconst receiveAPIdataSuccess = (data) => ({\n  type: RECEIVE_API_DATA_SUCCESS,\n  data,\n});\n\nconst receiveAPIdataFailure = (error) => ({\n  type: RECEIVE_API_DATA_FAILURE,\n  error,\n});\n\nconst requestQuestions = () => ({\n  type: REQUEST_QUESTIONS,\n});\n\nexport const receiveQuestionsFromAPI = (data) => ({\n  type: RECEIVE_QUESTIONS_FROM_API,\n  questions: data.results,\n});\n\nexport const counter = () => ({\n  type: COUNTER,\n});\n\nexport const zCounter = () => ({\n  type: ZEROU,\n});\n\nexport function fetchToken() {\n  return (dispatch) => {\n    dispatch(requestAPIdata());\n\n    return tokenAPI().then(\n      (data) => dispatch(receiveAPIdataSuccess(data)),\n      (error) => dispatch(receiveAPIdataFailure(error)),\n    );\n  };\n}\n\nexport function fetchQuestions(data) {\n  return (dispatch) => {\n    dispatch(requestQuestions());\n\n    return questionsAPI(data).then((token) =>\n      dispatch(receiveQuestionsFromAPI(token)),\n    );\n  };\n}\n","const TOKENURL = 'https://opentdb.com/api_token.php?command=request';\n\nexport const tokenAPI = () => (\n  fetch(TOKENURL)\n    .then(\n      (response) => (\n        response\n          .json()\n          .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n          .then((data) => data.token)\n      ),\n    )\n);\n\nexport const questionsAPI = (token) => (\n  (fetch(`https://opentdb.com/api.php?amount=5&token=${token}`))\n    .then(\n      (qresponse) => (\n        qresponse\n          .json()\n          .then((json) => (qresponse.ok ? Promise.resolve(json) : Promise.reject(json)))\n          .then((data) => data)\n      ),\n    )\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { handleSubmit, fetchToken, fetchQuestions } from '../actions'\nimport logo from '../logo.png';\n\nconst CryptoJS = require('crypto-js');\n\nclass PaginaInicial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { nome: '', email: '', hash: '', clicked: false };\n    this.nomeChange = this.nomeChange.bind(this);\n    this.emailChange = this.emailChange.bind(this);\n    this.cR = this.cR.bind(this);\n    this.clickAPI = this.clickAPI.bind(this);\n  }\n\n  componentDidMount() {\n    localStorage.setItem(\n      'state',\n      JSON.stringify({\n        player: {\n          name: '',\n          assertions: 0,\n          score: 0,\n          gravatarEmail: '',\n        },\n      }),\n    );\n  }\n\n  nomeChange(event) {\n    this.setState({ nome: event.target.value });\n  }\n\n  emailChange(event) {\n    this.setState({ email: event.target.value });\n    const cryptoMail = CryptoJS.MD5(event.target.value).toString();\n    this.setState({ hash: cryptoMail });\n  }\n\n  cR() {\n    this.setState({ clicked: true });\n  }\n\n  clickAPI() {\n    const { hC, chave, questions } = this.props;\n    hC(this.state);\n    chave().then(({ data }) => {\n      questions(data);\n      localStorage.setItem('token', data);\n    });\n    this.cR();\n    localStorage.setItem(\n      'state',\n      JSON.stringify({\n        player: {\n          name: this.state.nome,\n          assertions: 0,\n          score: 0,\n          gravatarEmail: this.state.email,\n        },\n      }),\n    );\n  }\n\n  render() {\n    const { clicked, email, nome } = this.state;\n    const e = !email || !nome;\n    if (clicked) return <Redirect to=\"/game\" />;\n    return (\n      <div className=\"col\">\n        <img src={logo} alt=\"tryoutLogo\" />  \n        <Link to=\"/settings\" data-testid=\"btn-settings\" style={{color: \"black\"}}>\n          Configurações\n        </Link>\n        <label htmlFor=\"nome\" className=\"inputz\">\n          Name\n          <input\n            type=\"text\"\n            data-testid=\"input-player-name\"\n            value={this.state.nome}\n            onChange={this.nomeChange}\n            />\n        </label>\n        <label htmlFor=\"email\" className=\"inputz\">\n          E-mail\n          <input\n            type=\"email\"\n            data-testid=\"input-gravatar-email\"\n            value={this.state.email}\n            onChange={this.emailChange}\n            />\n        </label>\n        <button data-testid=\"btn-play\" disabled={e} onClick={() => this.clickAPI()} className=\"btn\">PLAY!</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  hC: (login) => dispatch(handleSubmit(login)),\n  chave: () => dispatch(fetchToken()),\n  questions: (data) => dispatch(fetchQuestions(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(PaginaInicial);\n\nPaginaInicial.propTypes = {\n  hC: PropTypes.func.isRequired,\n  chave: PropTypes.func.isRequired,\n  questions: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  render() {\n    const { nome, hash, placar } = this.props;\n    return (\n      <header className=\"header\">\n        <Link className=\"btn\" data-testid=\"btn-go-home\" to=\"/\">Home</Link>\n        <img\n          data-testid=\"header-profile-picture\"\n          src={`https://www.gravatar.com/avatar/${hash}`}\n          alt=\"foto de perfil\"\n          className=\"inputz\"\n        />\n        <p data-testid=\"header-player-name\" className=\"inputz\">Player: {nome}</p>\n        <p data-testid=\"header-score\" className=\"inputz\">Score: {placar}</p>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  nome: state.loginReducer.login.nome,\n  hash: state.loginReducer.login.hash,\n  placar: state.placarReducer.scoreR,\n});\n\nexport default connect(mapStateToProps)(Header);\n\nHeader.propTypes = {\n  nome: PropTypes.string.isRequired,\n  hash: PropTypes.string.isRequired,\n  placar: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { counter, dados } from '../actions';\n\nclass Answers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClicked: false,\n      isAssertion: false,\n      timer: 30,\n      player: {\n        name: '',\n        assertions: 0,\n        score: 0,\n        gravatarEmail: '',\n      },\n    };\n    this.nQ = this.nQ.bind(this);\n    this.clickC = this.clickC.bind(this);\n    this.clickI = this.clickI.bind(this);\n  }\n\n  componentDidMount() {\n    this.intervalChange();\n    this.setLocalstorage();\n  }\n\n  setLocalstorage() {\n    const { nome, email } = this.props;\n    this.setState({ player: {\n      name: nome,\n      assertions: 0,\n      score: 0,\n      gravatarEmail: email,\n    } });\n  }\n\n  intervalChange() {\n    this.setState({ timer: 30 });\n    this.myInterval = setInterval(() => {\n      if (this.state.timer === 1) {\n        clearInterval(this.myInterval);\n      }\n      this.setState((previousState) => ({\n        timer: previousState.timer - 1,\n      }));\n      if (this.state.isClicked) {\n        clearInterval(this.myInterval);\n      }\n      this.timeOut();\n    }, 1000);\n  }\n\n  // prettier-ignore\n  nQ() {\n    const { counterF, playerR } = this.props;\n    this.setState({\n      isClicked: false,\n    });\n    counterF();\n    clearInterval(this.myInterval);\n    this.intervalChange();\n    playerR(this.state.player);\n  }\n\n  // prettier-ignore\n  clickC() {\n    const { playerR } = this.props;\n    this.setState({ isClicked: true });\n    this.points();\n    playerR(this.state.player);\n  }\n\n  // prettier-ignore\n  clickI() {\n    const { playerR } = this.props;\n    this.setState({ isClicked: true });\n    const info = { player: this.state.player };\n    playerR(this.state.player);\n    localStorage.setItem('state', JSON.stringify(info));\n  }\n\n  timeOut() {\n    if (this.state.timer === 0) {\n      this.setState({ isClicked: true });\n    }\n  }\n\n  // prettier-ignore\n  points() {\n    const { perguntas, count } = this.props;\n    let dif = 0;\n    switch (perguntas[count].difficulty) {\n      case 'hard':\n        dif = 3;\n        break;\n      case 'medium':\n        dif = 2;\n        break;\n      case 'easy':\n        dif = 1;\n        break;\n      default:\n        dif = 0;\n        break;\n    }\n    this.setState({\n      player: {\n        ...this.state.player,\n        score: this.state.player.score + ((this.state.timer * dif) + 10),\n        assertions: this.state.player.assertions + 1,\n      },\n    });\n\n    localStorage.setItem('state', JSON.stringify({\n      player: {\n        ...this.state.player,\n        score: this.state.player.score + ((this.state.timer * dif) + 10),\n        assertions: this.state.player.assertions + 1,\n      },\n    }));\n  }\n\n  // prettier-ignore\n  render() {\n    const { perguntas, count } = this.props;\n    const { isClicked } = this.state;\n    return (\n      <div>\n        <h2>Timer:{this.state.timer}</h2>\n        {perguntas[count] && (\n          <div>\n            <button\n              data-testid=\"correct-answer\"\n              onClick={() => this.clickC()}\n              disabled={isClicked}\n              className={isClicked ? 'green-border' : null}\n            >\n              {perguntas[count].correct_answer}\n            </button>\n            {perguntas[count].incorrect_answers.map((respostaI, i) => (\n              <button\n                data-testid={`wrong-answer-${i}`} onClick={() => this.clickI()}\n                disabled={isClicked} className={isClicked ? 'red-border' : null}\n              >\n                {respostaI}\n              </button>\n            ))}\n            {isClicked && (<div><button className=\"btn\" data-testid=\"btn-next\" onClick={() => this.nQ()}>Next</button></div>)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = (state) => ({\n  perguntas: state.tokenReducer.questions,\n  count: state.counterReducer.count,\n  nome: state.loginReducer.login.nome,\n  email: state.loginReducer.login.email,\n});\n\nconst mapDispatchtoProps = (dispatch) => ({\n  counterF: () => dispatch(counter()),\n  playerR: (player) => dispatch(dados(player)),\n});\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Answers);\n\nAnswers.propTypes = {\n  perguntas: PropTypes.arrayOf(PropTypes.object).isRequired,\n  counterF: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired,\n  playerR: PropTypes.shape({\n    scoreR: PropTypes.number,\n    assertionsR: PropTypes.number,\n  }).isRequired,\n  nome: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Answers from '../components/Answers';\n\nclass TelaJogo extends Component {\n\n  render() {\n    const { perguntas, count } = this.props;\n    if (count > 4) {\n      return <Redirect to=\"/feedback\" />;\n    }\n    return (\n      <div className=\"game\">\n        <Header />\n        {/* <h1>Tela de Jogo</h1> */}\n        {perguntas[count] && (\n          <div>\n            <p data-testid=\"question-category\">\n              Category: {perguntas[count].category}\n            </p>\n            <p data-testid=\"question-text\">\n              Question: {perguntas[count].question}\n            </p>\n            <Answers />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = (state) => ({\n  perguntas: state.tokenReducer.questions,\n  count: state.counterReducer.count,\n});\n\nexport default connect(mapStatetoProps)(TelaJogo);\n\nTelaJogo.propTypes = {\n  perguntas: PropTypes.arrayOf(PropTypes.object).isRequired,\n  count: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\n\nexport default class Configuracoes extends Component {\n  render() {\n    return (\n      <header>\n        <h1 data-testid=\"settings-title\">Configurações</h1>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { zCounter, clearLog, zeroDados } from '../actions';\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: '' };\n  }\n\n  componentDidMount() {\n    this.text();\n    const oldRanking = JSON.parse(localStorage.getItem('ranking'));\n    const { nome, hash, placar } = this.props;\n    const newRanking = { name: nome, score: placar, picture: `https://www.gravatar.com/avatar/${hash}` };\n    if (oldRanking) {\n      return localStorage.setItem('ranking', JSON.stringify([...oldRanking, newRanking]));\n    }\n    return localStorage.setItem('ranking', JSON.stringify([newRanking]));\n  }\n\n  text() {\n    const { acertos } = this.props;\n    if (acertos >= 3) {\n      return this.setState({ message: 'Great Work!' });\n    }\n    return this.setState({ message: 'You could have done it better...' });\n  }\n\n  clearStore() {\n    const { zeroCount, clearLogin, clearPlacar } = this.props;\n    zeroCount();\n    clearLogin();\n    clearPlacar();\n  }\n\n  render() {\n    const { nome, hash, placar, acertos } = this.props;\n    return (\n      <div>\n        <header >\n          <Link className=\"btn\" data-testid=\"btn-play-again\" to=\"/\" onClick={() => this.clearStore()}>\n            Home  \n          </Link>\n          <Link className=\"btn\" data-testid=\"btn-ranking\" to=\"/ranking\" onClick={() => this.clearStore()}>\n            Ranking\n          </Link>\n          <p data-testid=\"header-score\">{placar}</p>\n        </header>\n        <h1 className=\"big\">FEEDBACK</h1>\n        <div className=\"feed\">\n          <img\n            data-testid=\"header-profile-picture\"\n            src={`https://www.gravatar.com/avatar/${hash}`}\n            alt=\"foto de perfil\"\n          />\n          <p data-testid=\"header-player-name\">Player: {nome}</p>\n          <p data-testid=\"feedback-total-score\">Score: {placar}</p>\n          <p data-testid=\"feedback-total-question\">Assertions: {acertos}</p>\n        </div>\n        <h1 className=\"big\" data-testid=\"feedback-text\">{this.state.message}</h1>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  nome: state.loginReducer.login.nome,\n  hash: state.loginReducer.login.hash,\n  placar: state.placarReducer.scoreR,\n  acertos: state.placarReducer.assertionsR,\n});\n\nconst mapDispatchtoProps = (dispatch) => ({\n  zeroCount: () => dispatch(zCounter()),\n  clearLogin: () => dispatch(clearLog()),\n  clearPlacar: () => dispatch(zeroDados()),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(Feedback);\n\nFeedback.propTypes = {\n  nome: PropTypes.string.isRequired,\n  hash: PropTypes.string.isRequired,\n  placar: PropTypes.number.isRequired,\n  acertos: PropTypes.number.isRequired,\n  zeroCount: PropTypes.func.isRequired,\n  clearLogin: PropTypes.func.isRequired,\n  clearPlacar: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Ranking extends Component {\n  render() {\n    const rankList = JSON.parse(localStorage.getItem('ranking'));\n    const rankOrder = rankList.sort((a, b) => b.score - a.score);\n    const Mapa = rankOrder.map((jogador, index) => (\n      <div key={jogador.name} className=\"rk\">\n        <h2>{index+1}</h2>\n        <img src={jogador.picture} alt={jogador.name} />\n        <p data-testid={`player-name-${index}`}>{jogador.name}</p>\n        <p data-testid={`player-score-${index}`}>{jogador.score}</p>\n      </div>),\n    );\n    return (\n      <div>\n        <header>\n          <Link className=\"btn\" to=\"/\" data-testid=\"btn-go-home\">\n            play AGAIN!\n          </Link>\n          <h1 data-testid=\"ranking-title\" className=\"big\">RANKING</h1>\n        </header>\n        <section className=\"center\">\n          <div>{Mapa}</div>\n        </section>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport {\n  LOGIN,\n  REQUEST_API_DATA,\n  RECEIVE_API_DATA_SUCCESS,\n  RECEIVE_API_DATA_FAILURE,\n  RECEIVE_QUESTIONS_FROM_API,\n  REQUEST_QUESTIONS,\n  COUNTER,\n  DADOS,\n  ZEROU,\n  CLEARLOG,\n  ZERODADOS,\n} from '../actions';\n\nconst INITIAL_STATE_LOGIN = {\n  login: {\n    nome: '',\n    email: '',\n    hash: '',\n    placar: 0,\n  },\n};\n\nfunction loginReducer(state = INITIAL_STATE_LOGIN, action) {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        login: {\n          nome: action.login.nome,\n          email: action.login.email,\n          hash: action.login.hash,\n          placar: action.login.placar,\n        },\n      };\n    case CLEARLOG:\n      return {\n        ...state,\n        login: {\n          nome: '',\n          email: '',\n          hash: '',\n          placar: '',\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nconst INITIAL_STATE_PLACAR = {\n  scoreR: 0,\n  assertionsR: 0,\n};\n\nfunction placarReducer(state = INITIAL_STATE_PLACAR, action) {\n  switch (action.type) {\n    case DADOS:\n      return {\n        ...state,\n        scoreR: action.player.score,\n        assertionsR: action.player.assertions,\n      };\n    case ZERODADOS:\n      return {\n        ...state,\n        scoreR: 0,\n        assertionsR: 0,\n      };\n    default:\n      return state;\n  }\n}\n\nconst INITIAL_STATE_TOKEN = {\n  token: '',\n  questions: [],\n  isFetching: false,\n};\n\nfunction tokenReducer(state = INITIAL_STATE_TOKEN, action) {\n  switch (action.type) {\n    case REQUEST_API_DATA:\n      return { ...state, isFetching: true };\n    case RECEIVE_API_DATA_SUCCESS:\n      return {\n        ...state,\n        token: action.token,\n        isFetching: false,\n      };\n    case RECEIVE_API_DATA_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n        isFetching: false,\n      };\n    case REQUEST_QUESTIONS:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_QUESTIONS_FROM_API:\n      return {\n        ...state,\n        questions: action.questions,\n        isFetching: false,\n      };\n    default:\n      return state;\n  }\n}\n\nconst INITIAL_STATE_COUNTER = {\n  count: 0,\n};\n\nfunction counterReducer(state = INITIAL_STATE_COUNTER, action) {\n  switch (action.type) {\n    case COUNTER:\n      return { ...state, count: state.count + 1 };\n    case ZEROU:\n      return { ...state, count: 0 };\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  loginReducer,\n  tokenReducer,\n  counterReducer,\n  placarReducer,\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n// import logo from './trivia.png';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport PaginaInicial from './pages/PaginaInicial';\nimport TelaJogo from './pages/TelaJogo';\nimport Configuracoes from './pages/Configuracoes';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={PaginaInicial} />\n          <Route path=\"/game\" component={TelaJogo} />\n          <Route path=\"/settings\" component={Configuracoes} />\n          <Route path=\"/feedback\" component={Feedback} />\n          <Route path=\"/ranking\" component={Ranking} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n"],"sourceRoot":""}