{"ast":null,"code":"var _jsxFileName = \"/home/cd/trybe-projects/sd-05-project-trivia-react-redux-14/src/pages/Feedback.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { zCounter, clearLog, zeroDados } from '../actions';\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    this.text();\n    const oldRanking = JSON.parse(localStorage.getItem('ranking'));\n    const _this$props = this.props,\n          nome = _this$props.nome,\n          hash = _this$props.hash,\n          placar = _this$props.placar;\n    const newRanking = {\n      name: nome,\n      score: placar,\n      picture: `https://www.gravatar.com/avatar/${hash}`\n    };\n\n    if (oldRanking) {\n      return localStorage.setItem('ranking', JSON.stringify([...oldRanking, newRanking]));\n    }\n\n    return localStorage.setItem('ranking', JSON.stringify([newRanking]));\n  }\n\n  text() {\n    const acertos = this.props.acertos;\n\n    if (acertos >= 3) {\n      return this.setState({\n        message: 'Mandou bem!'\n      });\n    }\n\n    return this.setState({\n      message: 'Podia ser melhor...'\n    });\n  }\n\n  clearStore() {\n    const _this$props2 = this.props,\n          zeroCount = _this$props2.zeroCount,\n          clearLogin = _this$props2.clearLogin,\n          clearPlacar = _this$props2.clearPlacar;\n    zeroCount();\n    clearLogin();\n    clearPlacar();\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          nome = _this$props3.nome,\n          hash = _this$props3.hash,\n          placar = _this$props3.placar,\n          acertos = _this$props3.acertos;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"btn\",\n      \"data-testid\": \"btn-play-again\",\n      to: \"/\",\n      onClick: () => this.clearStore(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Home\"), React.createElement(Link, {\n      className: \"btn\",\n      \"data-testid\": \"btn-ranking\",\n      to: \"/ranking\",\n      onClick: () => this.clearStore(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Ranking\"), React.createElement(\"p\", {\n      \"data-testid\": \"header-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, placar)), React.createElement(\"h1\", {\n      className: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"FEEDBACK\"), React.createElement(\"div\", {\n      className: \"rk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      \"data-testid\": \"header-profile-picture\",\n      src: `https://www.gravatar.com/avatar/${hash}`,\n      alt: \"foto de perfil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      \"data-testid\": \"header-player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Jogador: \", nome), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, placar), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, acertos)), React.createElement(\"h1\", {\n      className: \"big\",\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.message));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  nome: state.loginReducer.login.nome,\n  hash: state.loginReducer.login.hash,\n  placar: state.placarReducer.scoreR,\n  acertos: state.placarReducer.assertionsR\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  zeroCount: () => dispatch(zCounter()),\n  clearLogin: () => dispatch(clearLog()),\n  clearPlacar: () => dispatch(zeroDados())\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(Feedback);\nFeedback.propTypes = {\n  nome: PropTypes.string.isRequired,\n  hash: PropTypes.string.isRequired,\n  placar: PropTypes.number.isRequired,\n  acertos: PropTypes.number.isRequired,\n  zeroCount: PropTypes.func.isRequired,\n  clearLogin: PropTypes.func.isRequired,\n  clearPlacar: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-project-trivia-react-redux-14/src/pages/Feedback.jsx"],"names":["React","Component","connect","Link","PropTypes","zCounter","clearLog","zeroDados","Feedback","constructor","props","state","message","componentDidMount","text","oldRanking","JSON","parse","localStorage","getItem","nome","hash","placar","newRanking","name","score","picture","setItem","stringify","acertos","setState","clearStore","zeroCount","clearLogin","clearPlacar","render","mapStateToProps","loginReducer","login","placarReducer","scoreR","assertionsR","mapDispatchtoProps","dispatch","propTypes","string","isRequired","number","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,YAA9C;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC/BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,IAAL;AACA,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAnB;AAFkB,wBAGa,KAAKT,KAHlB;AAAA,UAGVU,IAHU,eAGVA,IAHU;AAAA,UAGJC,IAHI,eAGJA,IAHI;AAAA,UAGEC,MAHF,eAGEA,MAHF;AAIlB,UAAMC,UAAU,GAAG;AAAEC,MAAAA,IAAI,EAAEJ,IAAR;AAAcK,MAAAA,KAAK,EAAEH,MAArB;AAA6BI,MAAAA,OAAO,EAAG,mCAAkCL,IAAK;AAA9E,KAAnB;;AACA,QAAIN,UAAJ,EAAgB;AACd,aAAOG,YAAY,CAACS,OAAb,CAAqB,SAArB,EAAgCX,IAAI,CAACY,SAAL,CAAe,CAAC,GAAGb,UAAJ,EAAgBQ,UAAhB,CAAf,CAAhC,CAAP;AACD;;AACD,WAAOL,YAAY,CAACS,OAAb,CAAqB,SAArB,EAAgCX,IAAI,CAACY,SAAL,CAAe,CAACL,UAAD,CAAf,CAAhC,CAAP;AACD;;AAEDT,EAAAA,IAAI,GAAG;AAAA,UACGe,OADH,GACe,KAAKnB,KADpB,CACGmB,OADH;;AAEL,QAAIA,OAAO,IAAI,CAAf,EAAkB;AAChB,aAAO,KAAKC,QAAL,CAAc;AAAElB,QAAAA,OAAO,EAAE;AAAX,OAAd,CAAP;AACD;;AACD,WAAO,KAAKkB,QAAL,CAAc;AAAElB,MAAAA,OAAO,EAAE;AAAX,KAAd,CAAP;AACD;;AAEDmB,EAAAA,UAAU,GAAG;AAAA,yBACoC,KAAKrB,KADzC;AAAA,UACHsB,SADG,gBACHA,SADG;AAAA,UACQC,UADR,gBACQA,UADR;AAAA,UACoBC,WADpB,gBACoBA,WADpB;AAEXF,IAAAA,SAAS;AACTC,IAAAA,UAAU;AACVC,IAAAA,WAAW;AACZ;;AAEDC,EAAAA,MAAM,GAAG;AAAA,yBACiC,KAAKzB,KADtC;AAAA,UACCU,IADD,gBACCA,IADD;AAAA,UACOC,IADP,gBACOA,IADP;AAAA,UACaC,MADb,gBACaA,MADb;AAAA,UACqBO,OADrB,gBACqBA,OADrB;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAsB,qBAAY,gBAAlC;AAAmD,MAAA,EAAE,EAAC,GAAtD;AAA0D,MAAA,OAAO,EAAE,MAAM,KAAKE,UAAL,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAsB,qBAAY,aAAlC;AAAgD,MAAA,EAAE,EAAC,UAAnD;AAA8D,MAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAOE;AAAG,qBAAY,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BT,MAA/B,CAPF,CADF,EAUE;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,EAWE;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,qBAAY,wBADd;AAEE,MAAA,GAAG,EAAG,mCAAkCD,IAAK,EAF/C;AAGE,MAAA,GAAG,EAAC,gBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAG,qBAAY,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8CD,IAA9C,CANF,EAOE;AAAG,qBAAY,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCE,MAAvC,CAPF,EAQE;AAAG,qBAAY,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CO,OAA1C,CARF,CAXF,EAqBE;AAAI,MAAA,SAAS,EAAC,KAAd;AAAoB,qBAAY,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiD,KAAKlB,KAAL,CAAWC,OAA5D,CArBF,CADF;AAyBD;;AA3D8B;;AA8DjC,MAAMwB,eAAe,GAAIzB,KAAD,KAAY;AAClCS,EAAAA,IAAI,EAAET,KAAK,CAAC0B,YAAN,CAAmBC,KAAnB,CAAyBlB,IADG;AAElCC,EAAAA,IAAI,EAAEV,KAAK,CAAC0B,YAAN,CAAmBC,KAAnB,CAAyBjB,IAFG;AAGlCC,EAAAA,MAAM,EAAEX,KAAK,CAAC4B,aAAN,CAAoBC,MAHM;AAIlCX,EAAAA,OAAO,EAAElB,KAAK,CAAC4B,aAAN,CAAoBE;AAJK,CAAZ,CAAxB;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCX,EAAAA,SAAS,EAAE,MAAMW,QAAQ,CAACtC,QAAQ,EAAT,CADe;AAExC4B,EAAAA,UAAU,EAAE,MAAMU,QAAQ,CAACrC,QAAQ,EAAT,CAFc;AAGxC4B,EAAAA,WAAW,EAAE,MAAMS,QAAQ,CAACpC,SAAS,EAAV;AAHa,CAAf,CAA3B;;AAMA,eAAeL,OAAO,CAACkC,eAAD,EAAkBM,kBAAlB,CAAP,CAA6ClC,QAA7C,CAAf;AAEAA,QAAQ,CAACoC,SAAT,GAAqB;AACnBxB,EAAAA,IAAI,EAAEhB,SAAS,CAACyC,MAAV,CAAiBC,UADJ;AAEnBzB,EAAAA,IAAI,EAAEjB,SAAS,CAACyC,MAAV,CAAiBC,UAFJ;AAGnBxB,EAAAA,MAAM,EAAElB,SAAS,CAAC2C,MAAV,CAAiBD,UAHN;AAInBjB,EAAAA,OAAO,EAAEzB,SAAS,CAAC2C,MAAV,CAAiBD,UAJP;AAKnBd,EAAAA,SAAS,EAAE5B,SAAS,CAAC4C,IAAV,CAAeF,UALP;AAMnBb,EAAAA,UAAU,EAAE7B,SAAS,CAAC4C,IAAV,CAAeF,UANR;AAOnBZ,EAAAA,WAAW,EAAE9B,SAAS,CAAC4C,IAAV,CAAeF;AAPT,CAArB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { zCounter, clearLog, zeroDados } from '../actions';\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: '' };\n  }\n\n  componentDidMount() {\n    this.text();\n    const oldRanking = JSON.parse(localStorage.getItem('ranking'));\n    const { nome, hash, placar } = this.props;\n    const newRanking = { name: nome, score: placar, picture: `https://www.gravatar.com/avatar/${hash}` };\n    if (oldRanking) {\n      return localStorage.setItem('ranking', JSON.stringify([...oldRanking, newRanking]));\n    }\n    return localStorage.setItem('ranking', JSON.stringify([newRanking]));\n  }\n\n  text() {\n    const { acertos } = this.props;\n    if (acertos >= 3) {\n      return this.setState({ message: 'Mandou bem!' });\n    }\n    return this.setState({ message: 'Podia ser melhor...' });\n  }\n\n  clearStore() {\n    const { zeroCount, clearLogin, clearPlacar } = this.props;\n    zeroCount();\n    clearLogin();\n    clearPlacar();\n  }\n\n  render() {\n    const { nome, hash, placar, acertos } = this.props;\n    return (\n      <div>\n        <header >\n          <Link className=\"btn\" data-testid=\"btn-play-again\" to=\"/\" onClick={() => this.clearStore()}>\n            Home  \n          </Link>\n          <Link className=\"btn\" data-testid=\"btn-ranking\" to=\"/ranking\" onClick={() => this.clearStore()}>\n            Ranking\n          </Link>\n          <p data-testid=\"header-score\">{placar}</p>\n        </header>\n        <h1 className=\"big\">FEEDBACK</h1>\n        <div className=\"rk\">\n          <img\n            data-testid=\"header-profile-picture\"\n            src={`https://www.gravatar.com/avatar/${hash}`}\n            alt=\"foto de perfil\"\n          />\n          <p data-testid=\"header-player-name\">Jogador: {nome}</p>\n          <p data-testid=\"feedback-total-score\">{placar}</p>\n          <p data-testid=\"feedback-total-question\">{acertos}</p>\n        </div>\n        <h1 className=\"big\" data-testid=\"feedback-text\">{this.state.message}</h1>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  nome: state.loginReducer.login.nome,\n  hash: state.loginReducer.login.hash,\n  placar: state.placarReducer.scoreR,\n  acertos: state.placarReducer.assertionsR,\n});\n\nconst mapDispatchtoProps = (dispatch) => ({\n  zeroCount: () => dispatch(zCounter()),\n  clearLogin: () => dispatch(clearLog()),\n  clearPlacar: () => dispatch(zeroDados()),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(Feedback);\n\nFeedback.propTypes = {\n  nome: PropTypes.string.isRequired,\n  hash: PropTypes.string.isRequired,\n  placar: PropTypes.number.isRequired,\n  acertos: PropTypes.number.isRequired,\n  zeroCount: PropTypes.func.isRequired,\n  clearLogin: PropTypes.func.isRequired,\n  clearPlacar: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}