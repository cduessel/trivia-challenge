{"ast":null,"code":"var _jsxFileName = \"/home/cd/trybe-projects/sd-05-project-trivia-react-redux-14/src/pages/Feedback.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { zCounter, clearLog, zeroDados } from '../actions'; // import Header from '../components/Header';\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    this.text();\n    const _this$props = this.props,\n          nome = _this$props.nome,\n          hash = _this$props.hash,\n          placar = _this$props.placar;\n    const newRanking = {\n      name: nome,\n      score: placar,\n      picture: `https://www.gravatar.com/avatar/${hash}`\n    };\n    localStorage.setItem('ranking', JSON.stringify(newRanking));\n  } // ranking\n  // [\n  //   {name: nome-da-pessoa, score: 10, picture: url-da-foto-no-gravatar}\n  // ]\n\n\n  text() {\n    const acertos = this.props.acertos;\n\n    if (acertos >= 3) {\n      return this.setState({\n        message: 'Mandou bem!'\n      });\n    }\n\n    return this.setState({\n      message: 'Podia ser melhor...'\n    });\n  }\n\n  clearStore() {\n    const _this$props2 = this.props,\n          zeroCount = _this$props2.zeroCount,\n          clearLogin = _this$props2.clearLogin,\n          clearPlacar = _this$props2.clearPlacar;\n    zeroCount();\n    clearLogin();\n    clearPlacar();\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          nome = _this$props3.nome,\n          hash = _this$props3.hash,\n          placar = _this$props3.placar,\n          acertos = _this$props3.acertos;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"header-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, placar)), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"FEEDBACK\"), React.createElement(\"img\", {\n      \"data-testid\": \"header-profile-picture\",\n      src: `https://www.gravatar.com/avatar/${hash}`,\n      alt: \"foto de perfil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      \"data-testid\": \"header-player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Jogador: \", nome), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, placar), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, acertos), React.createElement(Link, {\n      \"data-testid\": \"btn-play-again\",\n      to: \"/\",\n      onClick: () => this.clearStore(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Home\"), React.createElement(Link, {\n      \"data-testid\": \"btn-ranking\",\n      to: \"/ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Ranking\"), React.createElement(\"h2\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.message));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  nome: state.loginReducer.login.nome,\n  hash: state.loginReducer.login.hash,\n  placar: state.placarReducer.scoreR,\n  acertos: state.placarReducer.assertionsR\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  zeroCount: () => dispatch(zCounter()),\n  clearLogin: () => dispatch(clearLog()),\n  clearPlacar: () => dispatch(zeroDados()) // playerR: (player) => dispatch(dados(player)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(Feedback);\nFeedback.propTypes = {\n  nome: PropTypes.string.isRequired,\n  hash: PropTypes.string.isRequired,\n  placar: PropTypes.number.isRequired,\n  acertos: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-project-trivia-react-redux-14/src/pages/Feedback.jsx"],"names":["React","Component","connect","Link","PropTypes","zCounter","clearLog","zeroDados","Feedback","constructor","props","state","message","componentDidMount","text","nome","hash","placar","newRanking","name","score","picture","localStorage","setItem","JSON","stringify","acertos","setState","clearStore","zeroCount","clearLogin","clearPlacar","render","mapStateToProps","loginReducer","login","placarReducer","scoreR","assertionsR","mapDispatchtoProps","dispatch","propTypes","string","isRequired","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { zCounter, clearLog, zeroDados } from '../actions';\n// import Header from '../components/Header';\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: '' };\n  }\n\n  componentDidMount() {\n    this.text();\n    const { nome, hash, placar } = this.props;\n    const newRanking = { name: nome, score: placar, picture: `https://www.gravatar.com/avatar/${hash}` };\n    localStorage.setItem('ranking', JSON.stringify(newRanking));\n  }\n\n// ranking\n// [\n//   {name: nome-da-pessoa, score: 10, picture: url-da-foto-no-gravatar}\n// ]\n\n  text() {\n    const { acertos } = this.props;\n    if (acertos >= 3) {\n      return this.setState({ message: 'Mandou bem!' });\n    }\n    return this.setState({ message: 'Podia ser melhor...' });\n  }\n\n  clearStore(){\n    const { zeroCount, clearLogin, clearPlacar } = this.props;\n    zeroCount();\n    clearLogin();\n    clearPlacar();\n\n  }\n\n  render() {\n    const { nome, hash, placar, acertos } = this.props;\n    return (\n      <div>\n        <header>\n          <p data-testid=\"header-score\">{placar}</p>\n        </header>\n        <h1>FEEDBACK</h1>\n        <img\n          data-testid=\"header-profile-picture\"\n          src={`https://www.gravatar.com/avatar/${hash}`}\n          alt=\"foto de perfil\"\n        />\n        <p data-testid=\"header-player-name\">Jogador: {nome}</p>\n        <p data-testid=\"feedback-total-score\">{placar}</p>\n        <p data-testid=\"feedback-total-question\">{acertos}</p>\n        <Link data-testid=\"btn-play-again\" to=\"/\" onClick={() => this.clearStore()}>\n          Home\n        </Link>\n        <Link data-testid=\"btn-ranking\" to=\"/ranking\">\n          Ranking\n        </Link>\n        <h2 data-testid=\"feedback-text\">{this.state.message}</h2>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  nome: state.loginReducer.login.nome,\n  hash: state.loginReducer.login.hash,\n  placar: state.placarReducer.scoreR,\n  acertos: state.placarReducer.assertionsR,\n});\n\nconst mapDispatchtoProps = (dispatch) => ({\n  zeroCount: () => dispatch(zCounter()),\n  clearLogin: () => dispatch(clearLog()),\n  clearPlacar: () => dispatch(zeroDados()),\n  // playerR: (player) => dispatch(dados(player)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(Feedback);\n\nFeedback.propTypes = {\n  nome: PropTypes.string.isRequired,\n  hash: PropTypes.string.isRequired,\n  placar: PropTypes.number.isRequired,\n  acertos: PropTypes.number.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}