{"ast":null,"code":"var _jsxFileName = \"/home/cd/trybe-projects/sd-05-project-trivia-react-redux-14/src/pages/PaginaInicial.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { handleSubmit, fetchToken, fetchQuestions } from '../actions';\n\nconst CryptoJS = require('crypto-js');\n\nclass PaginaInicial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nome: '',\n      email: '',\n      hash: '',\n      clicked: false\n    };\n    this.nomeChange = this.nomeChange.bind(this);\n    this.emailChange = this.emailChange.bind(this);\n    this.cR = this.cR.bind(this);\n    this.clickAPI = this.clickAPI.bind(this);\n  }\n\n  componentDidMount() {\n    localStorage.setItem('state', JSON.stringify({\n      player: {\n        name: '',\n        assertions: 0,\n        score: 0,\n        gravatarEmail: ''\n      }\n    }));\n  }\n\n  nomeChange(event) {\n    this.setState({\n      nome: event.target.value\n    });\n  }\n\n  emailChange(event) {\n    this.setState({\n      email: event.target.value\n    });\n    const cryptoMail = CryptoJS.MD5(event.target.value).toString();\n    this.setState({\n      hash: cryptoMail\n    });\n  }\n\n  cR() {\n    this.setState({\n      clicked: true\n    });\n  }\n\n  clickAPI() {\n    const _this$props = this.props,\n          hC = _this$props.hC,\n          chave = _this$props.chave,\n          questions = _this$props.questions;\n    hC(this.state);\n    chave().then(({\n      data\n    }) => {\n      questions(data);\n      localStorage.setItem('token', data);\n    });\n    this.cR();\n    localStorage.setItem('state', JSON.stringify({\n      player: {\n        name: this.state.nome,\n        assertions: 0,\n        score: 0,\n        gravatarEmail: this.state.email\n      }\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          clicked = _this$state.clicked,\n          email = _this$state.email,\n          nome = _this$state.nome;\n    const e = !email || !nome;\n    if (clicked) return React.createElement(Redirect, {\n      to: \"/game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/settings\",\n      \"data-testid\": \"btn-settings\",\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"), React.createElement(\"label\", {\n      htmlFor: \"nome\",\n      className: \"inputz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Name\", React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"input-player-name\",\n      value: this.state.nome,\n      onChange: this.nomeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"inputz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"E-mail\", React.createElement(\"input\", {\n      type: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      value: this.state.email,\n      onChange: this.emailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      \"data-testid\": \"btn-play\",\n      disabled: e,\n      onClick: () => this.clickAPI(),\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"PLAY!\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  hC: login => dispatch(handleSubmit(login)),\n  chave: () => dispatch(fetchToken()),\n  questions: data => dispatch(fetchQuestions(data))\n});\n\nexport default connect(null, mapDispatchToProps)(PaginaInicial);\nPaginaInicial.propTypes = {\n  hC: PropTypes.func.isRequired,\n  chave: PropTypes.func.isRequired,\n  questions: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-project-trivia-react-redux-14/src/pages/PaginaInicial.jsx"],"names":["React","Component","PropTypes","connect","Link","Redirect","handleSubmit","fetchToken","fetchQuestions","CryptoJS","require","PaginaInicial","constructor","props","state","nome","email","hash","clicked","nomeChange","bind","emailChange","cR","clickAPI","componentDidMount","localStorage","setItem","JSON","stringify","player","name","assertions","score","gravatarEmail","event","setState","target","value","cryptoMail","MD5","toString","hC","chave","questions","then","data","render","e","color","mapDispatchToProps","dispatch","login","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { handleSubmit, fetchToken, fetchQuestions } from '../actions';\n\nconst CryptoJS = require('crypto-js');\n\nclass PaginaInicial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { nome: '', email: '', hash: '', clicked: false };\n    this.nomeChange = this.nomeChange.bind(this);\n    this.emailChange = this.emailChange.bind(this);\n    this.cR = this.cR.bind(this);\n    this.clickAPI = this.clickAPI.bind(this);\n  }\n\n  componentDidMount() {\n    localStorage.setItem(\n      'state',\n      JSON.stringify({\n        player: {\n          name: '',\n          assertions: 0,\n          score: 0,\n          gravatarEmail: '',\n        },\n      }),\n    );\n  }\n\n  nomeChange(event) {\n    this.setState({ nome: event.target.value });\n  }\n\n  emailChange(event) {\n    this.setState({ email: event.target.value });\n    const cryptoMail = CryptoJS.MD5(event.target.value).toString();\n    this.setState({ hash: cryptoMail });\n  }\n\n  cR() {\n    this.setState({ clicked: true });\n  }\n\n  clickAPI() {\n    const { hC, chave, questions } = this.props;\n    hC(this.state);\n    chave().then(({ data }) => {\n      questions(data);\n      localStorage.setItem('token', data);\n    });\n    this.cR();\n    localStorage.setItem(\n      'state',\n      JSON.stringify({\n        player: {\n          name: this.state.nome,\n          assertions: 0,\n          score: 0,\n          gravatarEmail: this.state.email,\n        },\n      }),\n    );\n  }\n\n  render() {\n    const { clicked, email, nome } = this.state;\n    const e = !email || !nome;\n    if (clicked) return <Redirect to=\"/game\" />;\n    return (\n      <div className=\"col\">\n        <Link to=\"/settings\" data-testid=\"btn-settings\" style={{color: \"black\"}}>\n          Configurações\n        </Link>\n        <label htmlFor=\"nome\" className=\"inputz\">\n          Name\n          <input\n            type=\"text\"\n            data-testid=\"input-player-name\"\n            value={this.state.nome}\n            onChange={this.nomeChange}\n          />\n        </label>\n        <label htmlFor=\"email\" className=\"inputz\">\n          E-mail\n          <input\n            type=\"email\"\n            data-testid=\"input-gravatar-email\"\n            value={this.state.email}\n            onChange={this.emailChange}\n          />\n        </label>\n        <button data-testid=\"btn-play\" disabled={e} onClick={() => this.clickAPI()} className=\"btn\">PLAY!</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  hC: (login) => dispatch(handleSubmit(login)),\n  chave: () => dispatch(fetchToken()),\n  questions: (data) => dispatch(fetchQuestions(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(PaginaInicial);\n\nPaginaInicial.propTypes = {\n  hC: PropTypes.func.isRequired,\n  chave: PropTypes.func.isRequired,\n  questions: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}