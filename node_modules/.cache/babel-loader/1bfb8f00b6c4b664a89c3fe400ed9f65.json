{"ast":null,"code":"import _classCallCheck from\"/home/cd/trivia-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/cd/trivia-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/cd/trivia-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/cd/trivia-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/cd/trivia-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/cd/trivia-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import{Link,Redirect}from'react-router-dom';import{handleSubmit,fetchToken,fetchQuestions}from'../actions';import logo from'../logo.png';var CryptoJS=require('crypto-js');var PaginaInicial=/*#__PURE__*/function(_Component){_inherits(PaginaInicial,_Component);function PaginaInicial(props){var _this;_classCallCheck(this,PaginaInicial);_this=_possibleConstructorReturn(this,_getPrototypeOf(PaginaInicial).call(this,props));_this.state={nome:'',email:'',hash:'',clicked:false};_this.nomeChange=_this.nomeChange.bind(_assertThisInitialized(_this));_this.emailChange=_this.emailChange.bind(_assertThisInitialized(_this));_this.cR=_this.cR.bind(_assertThisInitialized(_this));_this.clickAPI=_this.clickAPI.bind(_assertThisInitialized(_this));return _this;}_createClass(PaginaInicial,[{key:\"componentDidMount\",value:function componentDidMount(){localStorage.setItem('state',JSON.stringify({player:{name:'',assertions:0,score:0,gravatarEmail:''}}));}},{key:\"nomeChange\",value:function nomeChange(event){this.setState({nome:event.target.value});}},{key:\"emailChange\",value:function emailChange(event){this.setState({email:event.target.value});var cryptoMail=CryptoJS.MD5(event.target.value).toString();this.setState({hash:cryptoMail});}},{key:\"cR\",value:function cR(){this.setState({clicked:true});}},{key:\"clickAPI\",value:function clickAPI(){var _this$props=this.props,hC=_this$props.hC,chave=_this$props.chave,questions=_this$props.questions;hC(this.state);chave().then(function(_ref){var data=_ref.data;questions(data);localStorage.setItem('token',data);});this.cR();localStorage.setItem('state',JSON.stringify({player:{name:this.state.nome,assertions:0,score:0,gravatarEmail:this.state.email}}));}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,clicked=_this$state.clicked,email=_this$state.email,nome=_this$state.nome;var e=!email||!nome;if(clicked)return React.createElement(Redirect,{to:\"/game\"});return React.createElement(\"div\",{className:\"col\"},React.createElement(\"img\",{src:logo,alt:\"tryoutLogo\"}),React.createElement(Link,{to:\"/settings\",\"data-testid\":\"btn-settings\",style:{color:\"black\"}},\"Configura\\xE7\\xF5es\"),React.createElement(\"label\",{htmlFor:\"nome\",className:\"inputz\"},\"Name\",React.createElement(\"input\",{type:\"text\",\"data-testid\":\"input-player-name\",value:this.state.nome,onChange:this.nomeChange})),React.createElement(\"label\",{htmlFor:\"email\",className:\"inputz\"},\"E-mail\",React.createElement(\"input\",{type:\"email\",\"data-testid\":\"input-gravatar-email\",value:this.state.email,onChange:this.emailChange})),React.createElement(\"button\",{\"data-testid\":\"btn-play\",disabled:e,onClick:function onClick(){return _this2.clickAPI();},className:\"btn\"},\"PLAY!\"));}}]);return PaginaInicial;}(Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return{hC:function hC(login){return dispatch(handleSubmit(login));},chave:function chave(){return dispatch(fetchToken());},questions:function questions(data){return dispatch(fetchQuestions(data));}};};export default connect(null,mapDispatchToProps)(PaginaInicial);","map":{"version":3,"sources":["/home/cd/trivia-challenge/src/pages/PaginaInicial.jsx"],"names":["React","Component","connect","Link","Redirect","handleSubmit","fetchToken","fetchQuestions","logo","CryptoJS","require","PaginaInicial","props","state","nome","email","hash","clicked","nomeChange","bind","emailChange","cR","clickAPI","localStorage","setItem","JSON","stringify","player","name","assertions","score","gravatarEmail","event","setState","target","value","cryptoMail","MD5","toString","hC","chave","questions","then","data","e","color","mapDispatchToProps","dispatch","login"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { handleSubmit, fetchToken, fetchQuestions } from '../actions'\nimport logo from '../logo.png';\n\nconst CryptoJS = require('crypto-js');\n\nclass PaginaInicial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { nome: '', email: '', hash: '', clicked: false };\n    this.nomeChange = this.nomeChange.bind(this);\n    this.emailChange = this.emailChange.bind(this);\n    this.cR = this.cR.bind(this);\n    this.clickAPI = this.clickAPI.bind(this);\n  }\n\n  componentDidMount() {\n    localStorage.setItem(\n      'state',\n      JSON.stringify({\n        player: {\n          name: '',\n          assertions: 0,\n          score: 0,\n          gravatarEmail: '',\n        },\n      }),\n    );\n  }\n\n  nomeChange(event) {\n    this.setState({ nome: event.target.value });\n  }\n\n  emailChange(event) {\n    this.setState({ email: event.target.value });\n    const cryptoMail = CryptoJS.MD5(event.target.value).toString();\n    this.setState({ hash: cryptoMail });\n  }\n\n  cR() {\n    this.setState({ clicked: true });\n  }\n\n  clickAPI() {\n    const { hC, chave, questions } = this.props;\n    hC(this.state);\n    chave().then(({ data }) => {\n      questions(data);\n      localStorage.setItem('token', data);\n    });\n    this.cR();\n    localStorage.setItem(\n      'state',\n      JSON.stringify({\n        player: {\n          name: this.state.nome,\n          assertions: 0,\n          score: 0,\n          gravatarEmail: this.state.email,\n        },\n      }),\n    );\n  }\n\n  render() {\n    const { clicked, email, nome } = this.state;\n    const e = !email || !nome;\n    if (clicked) return <Redirect to=\"/game\" />;\n    return (\n      <div className=\"col\">\n        <img src={logo} alt=\"tryoutLogo\" />  \n        <Link to=\"/settings\" data-testid=\"btn-settings\" style={{color: \"black\"}}>\n          Configurações\n        </Link>\n        <label htmlFor=\"nome\" className=\"inputz\">\n          Name\n          <input\n            type=\"text\"\n            data-testid=\"input-player-name\"\n            value={this.state.nome}\n            onChange={this.nomeChange}\n            />\n        </label>\n        <label htmlFor=\"email\" className=\"inputz\">\n          E-mail\n          <input\n            type=\"email\"\n            data-testid=\"input-gravatar-email\"\n            value={this.state.email}\n            onChange={this.emailChange}\n            />\n        </label>\n        <button data-testid=\"btn-play\" disabled={e} onClick={() => this.clickAPI()} className=\"btn\">PLAY!</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  hC: (login) => dispatch(handleSubmit(login)),\n  chave: () => dispatch(fetchToken()),\n  questions: (data) => dispatch(fetchQuestions(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(PaginaInicial);\n\nPaginaInicial.propTypes = {\n  hC: PropTypes.func.isRequired,\n  chave: PropTypes.func.isRequired,\n  questions: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}