{"ast":null,"code":"import _objectSpread from \"/home/cd/trybe-projects/sd-05-project-trivia-react-redux-14/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/cd/trybe-projects/sd-05-project-trivia-react-redux-14/src/components/Answers.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { counter, dados } from '../actions';\n\nclass Answers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClicked: false,\n      isAssertion: false,\n      timer: 30,\n      player: {\n        name: '',\n        assertions: 0,\n        score: 0,\n        gravatarEmail: ''\n      }\n    };\n    this.nQ = this.nQ.bind(this);\n    this.clickC = this.clickC.bind(this);\n    this.clickI = this.clickI.bind(this);\n  }\n\n  componentDidMount() {\n    // this.setState({ player: { ...this.state.player, name: nome, gravatarEmail: email } });\n    this.intervalChange();\n  }\n\n  componentWillUpdate() {//const { playerR } = this.props;\n    // playerR(this.state.player);\n  }\n\n  intervalChange() {\n    this.setState({\n      timer: 30\n    });\n    this.myInterval = setInterval(() => {\n      if (this.state.timer === 1) {\n        clearInterval(this.myInterval);\n      }\n\n      this.setState(previousState => ({\n        timer: previousState.timer - 1\n      }));\n\n      if (this.state.isClicked) {\n        clearInterval(this.myInterval);\n      }\n\n      this.timeOut();\n    }, 1000);\n  } // prettier-ignore\n\n\n  nQ() {\n    const _this$props = this.props,\n          counterF = _this$props.counterF,\n          playerR = _this$props.playerR;\n    this.setState({\n      isClicked: false\n    });\n    counterF();\n    clearInterval(this.myInterval);\n    this.intervalChange();\n    playerR(this.state.player); // console.log(this.state.player);\n  } // prettier-ignore\n\n\n  clickC() {\n    const playerR = this.props.playerR;\n    this.setState({\n      isClicked: true\n    });\n    this.points(); // const info = { player: this.state.player };\n\n    playerR(this.state.player); // localStorage.setItem('state', JSON.stringify(info));\n    // console.log(this.state.player.assertions);\n  } // prettier-ignore\n\n\n  clickI() {\n    const playerR = this.props.playerR;\n    this.setState({\n      isClicked: true\n    }); // const info = { player: this.state.player };\n\n    playerR(this.state.player); // localStorage.setItem('state', JSON.stringify(info));\n  }\n\n  timeOut() {\n    if (this.state.timer === 0) {\n      this.setState({\n        isClicked: true\n      });\n    }\n  } // prettier-ignore\n\n\n  points() {\n    const _this$props2 = this.props,\n          perguntas = _this$props2.perguntas,\n          count = _this$props2.count;\n    let dif = 0;\n\n    switch (perguntas[count].difficulty) {\n      case 'hard':\n        dif = 3;\n        break;\n\n      case 'medium':\n        dif = 2;\n        break;\n\n      case 'easy':\n        dif = 1;\n        break;\n\n      default:\n        dif = 0;\n        break;\n    }\n\n    this.setState({\n      player: _objectSpread({}, this.state.player, {\n        score: this.state.player.score + (this.state.timer * dif + 10),\n        assertions: this.state.player.assertions + 1\n      })\n    }); // playerR(this.state.player);\n\n    localStorage.setItem('state', JSON.stringify({\n      player: _objectSpread({}, this.state.player, {\n        score: this.state.player.score + (this.state.timer * dif + 10),\n        assertions: this.state.player.assertions + 1\n      })\n    }));\n  } // prettier-ignore\n\n\n  render() {\n    const _this$props3 = this.props,\n          perguntas = _this$props3.perguntas,\n          count = _this$props3.count;\n    const isClicked = this.state.isClicked;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.state.timer), perguntas[count] && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"data-testid\": \"correct-answer\",\n      onClick: () => this.clickC(),\n      disabled: isClicked,\n      className: isClicked ? 'green-border' : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, perguntas[count].correct_answer), perguntas[count].incorrect_answers.map((respostaI, i) => React.createElement(\"button\", {\n      \"data-testid\": `wrong-answer-${i}`,\n      onClick: () => this.clickI(),\n      disabled: isClicked,\n      className: isClicked ? 'red-border' : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, respostaI)), isClicked && React.createElement(\"button\", {\n      \"data-testid\": \"btn-next\",\n      onClick: () => this.nQ(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Next\")));\n  }\n\n}\n\nconst mapStatetoProps = state => ({\n  perguntas: state.tokenReducer.questions,\n  count: state.counterReducer.count,\n  nome: state.loginReducer.login.nome,\n  email: state.loginReducer.login.email\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  counterF: () => dispatch(counter()),\n  playerR: player => dispatch(dados(player))\n});\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Answers);\nAnswers.propTypes = {\n  perguntas: PropTypes.arrayOf(PropTypes.object).isRequired,\n  counterF: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired,\n  playerR: PropTypes.shape({\n    scoreR: PropTypes.number,\n    assertionsR: PropTypes.number\n  }).isRequired\n};","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-project-trivia-react-redux-14/src/components/Answers.jsx"],"names":["React","Component","PropTypes","connect","counter","dados","Answers","constructor","props","state","isClicked","isAssertion","timer","player","name","assertions","score","gravatarEmail","nQ","bind","clickC","clickI","componentDidMount","intervalChange","componentWillUpdate","setState","myInterval","setInterval","clearInterval","previousState","timeOut","counterF","playerR","points","perguntas","count","dif","difficulty","localStorage","setItem","JSON","stringify","render","correct_answer","incorrect_answers","map","respostaI","i","mapStatetoProps","tokenReducer","questions","counterReducer","nome","loginReducer","login","email","mapDispatchtoProps","dispatch","propTypes","arrayOf","object","isRequired","func","number","shape","scoreR","assertionsR"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { counter, dados } from '../actions';\n\nclass Answers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClicked: false,\n      isAssertion: false,\n      timer: 30,\n      player: {\n        name: '',\n        assertions: 0,\n        score: 0,\n        gravatarEmail: '',\n      },\n    };\n    this.nQ = this.nQ.bind(this);\n    this.clickC = this.clickC.bind(this);\n    this.clickI = this.clickI.bind(this);\n  }\n\n  componentDidMount() {\n    // this.setState({ player: { ...this.state.player, name: nome, gravatarEmail: email } });\n    this.intervalChange();\n  }\n\n  componentWillUpdate() {\n    //const { playerR } = this.props;\n    // playerR(this.state.player);\n  }\n  \n  intervalChange() {\n    this.setState({ timer: 30 });\n    this.myInterval = setInterval(() => {\n      if (this.state.timer === 1) {\n        clearInterval(this.myInterval);\n      }\n      this.setState((previousState) => ({\n        timer: previousState.timer - 1,\n      }));\n      if (this.state.isClicked) {\n        clearInterval(this.myInterval);\n      }\n      this.timeOut();\n    }, 1000);\n  }\n\n  // prettier-ignore\n  nQ() {\n    const { counterF, playerR } = this.props;\n    this.setState({\n      isClicked: false,\n    });\n    counterF();\n    clearInterval(this.myInterval);\n    this.intervalChange();\n    playerR(this.state.player);\n    // console.log(this.state.player);\n  }\n  \n  // prettier-ignore\n  clickC() {\n    const { playerR } = this.props;\n    this.setState({ isClicked: true });\n    this.points();\n    // const info = { player: this.state.player };\n    playerR(this.state.player);\n    // localStorage.setItem('state', JSON.stringify(info));\n    // console.log(this.state.player.assertions);\n  }\n  \n  // prettier-ignore\n  clickI() {\n    const { playerR } = this.props;\n    this.setState({ isClicked: true });\n    // const info = { player: this.state.player };\n    playerR(this.state.player);\n    // localStorage.setItem('state', JSON.stringify(info));\n  }\n  \n  timeOut() {\n    if (this.state.timer === 0) {\n      this.setState({ isClicked: true });\n    }\n  }\n  \n  // prettier-ignore\n  points() {\n    const { perguntas, count } = this.props;\n    let dif = 0;\n    switch (perguntas[count].difficulty) {\n      case 'hard':\n        dif = 3;\n        break;\n        case 'medium':\n          dif = 2;\n          break;\n          case 'easy':\n            dif = 1;\n            break;\n            default:\n              dif = 0;\n              break;\n            }\n            this.setState({\n              player: {\n                ...this.state.player,\n                score: this.state.player.score + ((this.state.timer * dif) + 10),\n                assertions: this.state.player.assertions + 1,\n              },\n            });\n            // playerR(this.state.player);\n            localStorage.setItem('state', JSON.stringify({\n              player: {\n                ...this.state.player,\n                score: this.state.player.score + ((this.state.timer * dif) + 10),\n                assertions: this.state.player.assertions + 1,\n              },\n            }));\n          }\n          \n  // prettier-ignore\n  render() {\n    const { perguntas, count } = this.props;\n    const { isClicked } = this.state;\n    return (\n      <div>\n        <h2>{this.state.timer}</h2>\n        {perguntas[count] && (\n          <div>\n            <button\n              data-testid=\"correct-answer\"\n              onClick={() => this.clickC()}\n              disabled={isClicked}\n              className={isClicked ? 'green-border' : null}\n            >\n              {perguntas[count].correct_answer}\n            </button>\n            {perguntas[count].incorrect_answers.map((respostaI, i) => (\n              <button\n                data-testid={`wrong-answer-${i}`} onClick={() => this.clickI()}\n                disabled={isClicked} className={isClicked ? 'red-border' : null}\n              >\n                {respostaI}\n              </button>\n            ))}\n            {isClicked && (<button data-testid=\"btn-next\" onClick={() => this.nQ()}>Next</button>)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = (state) => ({\n  perguntas: state.tokenReducer.questions,\n  count: state.counterReducer.count,\n  nome: state.loginReducer.login.nome,\n  email: state.loginReducer.login.email,\n});\n\nconst mapDispatchtoProps = (dispatch) => ({\n  counterF: () => dispatch(counter()),\n  playerR: (player) => dispatch(dados(player)),\n});\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Answers);\n\nAnswers.propTypes = {\n  perguntas: PropTypes.arrayOf(PropTypes.object).isRequired,\n  counterF: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired,\n  playerR: PropTypes.shape({\n    scoreR: PropTypes.number,\n    assertionsR: PropTypes.number,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}